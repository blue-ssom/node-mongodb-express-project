<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>메인 페이지</title>
     <style>
        .post-container {
            margin-bottom: 20px;
            padding: 10px;
            margin-top: 10px;
            border: 1px solid #ccc;
        }
        .post-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .post-content {
            font-size: 16px;
        }

        .likes-container {
            margin-top: 10px;
        }


        .comment-text {
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ccc;
        }

        .comment-text p {
            margin: 0;
        }
        
    </style>
</head>
<body>
    <h1>메인 페이지</h1>
    <a href="/notification">알림 보기</a>
    {{#each posts}}
    <div class="post-container">
        <h2 class="post-title">{{this.title}}</h2>
        <p class="post-content">{{this.content}}</p>
        <p>작성자 : {{this.author.id }}</p>
        <p>작성 시간 : {{this.createdAt}}</p>

        <!-- 좋아요 출력 -->
        <button class="like-button" data-post-id="{{this._id}}">♥</button>
        <span class="likes-count">{{this.likes}}</span> 

        <!-- 댓글 출력 -->
        <div class="comment-container">
            <h4>댓글</h4>
            {{#each this.comments}}
                <div class="comment-text" data-user-idx="{{this.user._id}}">
                    <p>작성자: {{this.user.id}}</p>
                    <p>{{this.message}}</p>
                </div>
            {{/each}}
            <form action="/post/comment" method="POST">
                <input name="comment" placeholder="댓글을 입력하세요"></input>
                <input type="hidden" name="postId" value="{{ this._id }}">
                <button type="submit">등록</button>
            </form>
        </div>
    </div>
    {{/each}}

    <script>
        // 좋아요 버튼 클릭 이벤트 처리
        document.querySelectorAll('.like-button').forEach(button => {
            button.addEventListener('click', async () => {
                const postId = button.getAttribute('data-post-id');
                const response = await fetch(`/likes/${postId}`, { method: 'POST' });
                
                if (!response) {
                    throw new Error('서버 오류가 발생했습니다.');
                }
            });
        });

        // 서버에서 전달한 현재 사용자의 정보를 클라이언트 측 JavaScript 코드로 사용
        const currentUser = "{{currentUser}}";
        console.log("currentUser:",currentUser)

        const commentTexts = document.querySelectorAll('.comment-text');
        commentTexts.forEach(commentText => {
        const userIdx = commentText.getAttribute('data-user-idx');
        console.log('User ID:', userIdx);

        // 현재 사용자와 댓글 작성자가 같을 때만
        if (currentUser === userIdx) {
            // 수정 버튼 추가
            const editButton = document.createElement('button');
            editButton.textContent = '수정';
            editButton.classList.add('edit-comment-button');
            commentText.appendChild(editButton);

            // 삭제 버튼 추가
            const deleteButton = document.createElement('button');
            deleteButton.textContent = '삭제';
            deleteButton.classList.add('delete-comment-button');
            commentText.appendChild(deleteButton);
        }

        // 답글 버튼 추가
        const replyButton = document.createElement('button');
        replyButton.textContent = '답글';
        replyButton.classList.add('reply-comment-button');
        commentText.appendChild(replyButton);
        });
</script>

</body>
</html>
